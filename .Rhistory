return(vec)
}
prod <- function(ta, pij, k){
mult<-1
for(j in 1:k){
mult <- mult*((1+pij)*(1+ta))^(1/12)
}
return(mult)
}
simprod <- function(ta, pij, t){
vec <- vector(length=t)
for(k in 1:t){
vec[k] <- prod(ta, pij, k)
}
return(vec)
}
simmul <- function(ta, mc, t){
vec <- vector(length=t)
for(k in 1:t){
vec[k] <- (1+(k*(ta+mc)/12))
}
return(vec)
}
ind <- function(ta, pij, mc, t){
val <- simprod(ta, pij, t) - simmul(ta, mc, t)
if(val > 0){
resul <- 1
} else {
resul <- 0
}
return(resul)
}
# Simulacion
plot(simprod(0.04, 0.035, 400), col="green", ylim=c(0,25), xlim=c(0,400), type='l', lwd=2, main="Simulación", ylab='')
par(new=TRUE)
plot(simmul(0.04, 0.0933, 400), col="red", ylim=c(0,25), xlim=c(0,400), type='l', lwd=2, main="Simulación", ylab='')
ind(0.04, 0.035, 0.0933, 400)
ind <- function(ta, pij, mc, t){
val <- simprod(ta, pij, t) - simmul(ta, mc, t)
return(val)
}
ind(0.04, 0.035, 0.0933, 400)
ind <- function(ta, pij, mc, t){
val <- ifelse(simprod(ta, pij, t) - simmul(ta, mc, t)>0,1,0)
return(val)
}
ind(0.04, 0.035, 0.0933, 400)
x
seq(100, 400)
rep(100, 400)
rep(100, 400)*simprod(0.04, 0.035, 400)*ind(0.04, 0.035, 0.0933, 400) - rep(100, 400)*simmul(0.04, 0.0933, 400)*ind(0.04, 0.035, 0.0933, 400)
sum(rep(100, 400)*simprod(0.04, 0.035, 400)*ind(0.04, 0.035, 0.0933, 400) - rep(100, 400)*simmul(0.04, 0.0933, 400)*ind(0.04, 0.035, 0.0933, 400))
rep(100, 200)*simprod(0.04, 0.035, 200)*ind(0.04, 0.035, 0.0933, 200) - rep(100, 200)*simmul(0.04, 0.0933, 200)*ind(0.04, 0.035, 0.0933, 200)
sum(rep(100, 200)*simprod(0.04, 0.035, 200)*ind(0.04, 0.035, 0.0933, 200) - rep(100, 200)*simmul(0.04, 0.0933, 200)*ind(0.04, 0.035, 0.0933, 200))
ResPat <- function(xt){
val <- rep(xt, t)*simprod(0.04, 0.035, t)*ind(0.04, 0.035, 0.0933, t) - rep(xt, t)*simmul(0.04, 0.0933, t)*ind(0.04, 0.035, 0.0933, t)
return(val)
}
ResPat <- function(xt,t){
val <- rep(xt, t)*simprod(0.04, 0.035, t)*ind(0.04, 0.035, 0.0933, t) - rep(xt, t)*simmul(0.04, 0.0933, t)*ind(0.04, 0.035, 0.0933, t)
return(val)
}
ResPat(100,180)
ResPat <- function(xt,t){
val <- rep(xt, t)*simprod(0.04, 0.035, t)*ind(0.04, 0.035, 0.0933, t) - rep(xt, t)*simmul(0.04, 0.0933, t)*ind(0.04, 0.035, 0.0933, t)
return(sum(val))
}
ResPat(100,180)
ResPat(100,300)
ResPat(100,300)
ResPat <- function(xt,t){
val <- rep(xt, t)*simprod(0.04, 0.035, t)*ind(0.04, 0.035, 0.0933, t) - rep(xt, t)*simmul(0.04, 0.0933, t)*ind(0.04, 0.035, 0.0933, t)
return(max(sum(val), 25*366))
}
ResPat(100,300)
ResPat(100,180)
seq(180,400)
sapply(seq(180,400), ResPat(100,i))
sapply(seq(180,400), function(i){ResPat(100,i)})
Rsup <- sapply(seq(180,400), function(i){ResPat(100,i)})
Res <- function(xt, t){
sxt <- xt*t
r <- 2*(0.0764/12)
res <- t*sxt*r + 0.5*(366)
return(res)
}
sapply(seq(1,179), function(i){Res(100,i)})
Rinf <- sapply(seq(1,179), function(i){Res(100,i)})
plot(cbind(seq(180,400), Rsup), xlim=c(0,400), ylim=c(0,50000), ylab='Valor')
par(new=TRUE)
plot(cbind(seq(1,179), Rinf), xlim=c(0,400), ylim=c(0,50000), ylab='Valor')
plot(cbind(seq(180,400), Rsup), xlim=c(0,400), ylim=c(0,50000), ylab='Valor', col="green")
par(new=TRUE)
plot(cbind(seq(1,179), Rinf), xlim=c(0,400), ylim=c(0,50000), ylab='Valor', col="red")
plot(cbind(seq(1,179), Rinf), xlim=c(0,180), ylim=c(0,50000), ylab='Valor', col="red")
diff(Rinf)
plot(diff(Rinf))
Res <- function(xt, t){
sxt <- xt#*t
r <- 2*(0.0764/12)
res <- t*sxt*r + 0.5*(366)
return(res)
}
Rinf <- sapply(seq(1,179), function(i){Res(100,i)})
plot(cbind(seq(180,400), Rsup), xlim=c(0,400), ylim=c(0,50000), ylab='Valor', col="green")
par(new=TRUE)
plot(cbind(seq(1,179), Rinf), xlim=c(0,400), ylim=c(0,50000), ylab='Valor', col="red")
Rinf
sum(Rinf)
plot(cbind(seq(1,179), Rinf), xlim=c(0,180), ylim=c(0,50000), ylab='Valor', col="red")
plot(cbind(seq(1,179), Rinf), xlim=c(0,180), ylim=c(0,1000), ylab='Valor', col="red")
Res <- function(xt, t){
sxt <- xt*t
r <- 2*(0.0764/12)
res <- t*sxt*r + 0.5*(366)
return(res)
}
Rinf <- sapply(seq(1,179), function(i){Res(100,i)})
plot(cbind(seq(180,400), Rsup), xlim=c(0,400), ylim=c(0,50000), ylab='Valor', col="green")
par(new=TRUE)
plot(cbind(seq(1,179), Rinf), xlim=c(0,400), ylim=c(0,50000), ylab='Valor', col="red")
2*(0.0764/12)
100/0.091
24.5*366
24.5*366/0.012733
(24.5*366)/(0.012733*179)
179*100
17900/3934.263
Rsup <- sapply(seq(180,400), function(i){ResPat(200,i)})
Rinf <- sapply(seq(1,179), function(i){Res(200,i)})
Rsup
plot(cbind(seq(180,400), Rsup), xlim=c(0,400), ylim=c(0,50000), ylab='Valor', col="green")
par(new=TRUE)
plot(cbind(seq(1,179), Rinf), xlim=c(0,400), ylim=c(0,50000), ylab='Valor', col="red")
Rinf
200*179
24.5*366
35800/3934.263
(25*366)/179
(25*366)/180
(24.5*366)/179
50*179
25*366
Rsup <- sapply(seq(180,400), function(i){ResPat(300,i)})
Rinf <- sapply(seq(1,179), function(i){Res(300,i)})
Rinf
plot(cbind(seq(180,400), Rsup), xlim=c(0,400), ylim=c(0,100000), ylab='Valor', col="green")
par(new=TRUE)
plot(cbind(seq(1,179), Rinf), xlim=c(0,400), ylim=c(0,100000), ylab='Valor', col="red")
plot(cbind(seq(180,400), Rsup), xlim=c(0,400), ylim=c(0,100000), ylab='Valor', col="green", main='Aporte 300')
par(new=TRUE)
plot(cbind(seq(1,179), Rinf), xlim=c(0,400), ylim=c(0,100000), ylab='Valor', col="red", main='Aporte 300')
Rsup <- sapply(seq(180,400), function(i){ResPat(200,i)})
Res <- function(xt, t){
sxt <- xt*t
r <- 2*(0.0764/12)
res <- t*sxt*r + 0.5*(366)
return(res)
}
Rinf <- sapply(seq(1,179), function(i){Res(200,i)})
plot(cbind(seq(180,400), Rsup), xlim=c(0,400), ylim=c(0,100000), ylab='Valor', col="green", main='Aporte 200')
par(new=TRUE)
plot(cbind(seq(1,179), Rinf), xlim=c(0,400), ylim=c(0,100000), ylab='Valor', col="red", main='Aporte 200')
Rsup <- sapply(seq(180,400), function(i){ResPat(100,i)})
Res <- function(xt, t){
sxt <- xt*t
r <- 2*(0.0764/12)
res <- t*sxt*r + 0.5*(366)
return(res)
}
Rinf <- sapply(seq(1,179), function(i){Res(100,i)})
plot(cbind(seq(180,400), Rsup), xlim=c(0,400), ylim=c(0,80000), ylab='Valor', col="green", main='Aporte 200')
par(new=TRUE)
plot(cbind(seq(1,179), Rinf), xlim=c(0,400), ylim=c(0,80000), ylab='Valor', col="red", main='Aporte 200')
Rsup <- sapply(seq(180,400), function(i){ResPat(100,i)})
Res <- function(xt, t){
sxt <- xt*t
r <- 2*(0.0764/12)
res <- t*sxt*r + 0.5*(366)
return(res)
}
Rinf <- sapply(seq(1,179), function(i){Res(100,i)})
plot(cbind(seq(180,400), Rsup), xlim=c(0,400), ylim=c(0,80000), ylab='Valor', col="green", main='Aporte 100')
par(new=TRUE)
plot(cbind(seq(1,179), Rinf), xlim=c(0,400), ylim=c(0,80000), ylab='Valor', col="red", main='Aporte 100')
Rsup <- sapply(seq(180,400), function(i){ResPat(50,i)})
Res <- function(xt, t){
sxt <- xt*t
r <- 2*(0.0764/12)
res <- t*sxt*r + 0.5*(366)
return(res)
}
Rinf <- sapply(seq(1,179), function(i){Res(50,i)})
plot(cbind(seq(180,400), Rsup), xlim=c(0,400), ylim=c(0,50000), ylab='Valor', col="green", main='Aporte 50')
par(new=TRUE)
plot(cbind(seq(1,179), Rinf), xlim=c(0,400), ylim=c(0,50000), ylab='Valor', col="red", main='Aporte 50')
Rsup <- sapply(seq(180,400), function(i){ResPat(25,i)})
Res <- function(xt, t){
sxt <- xt*t
r <- 2*(0.0764/12)
res <- t*sxt*r + 0.5*(366)
return(res)
}
Rinf <- sapply(seq(1,179), function(i){Res(25,i)})
plot(cbind(seq(180,400), Rsup), xlim=c(0,400), ylim=c(0,30000), ylab='Valor', col="green", main='Aporte 25')
par(new=TRUE)
plot(cbind(seq(1,179), Rinf), xlim=c(0,400), ylim=c(0,30000), ylab='Valor', col="red", main='Aporte 25')
60.65*0.09
file.rename("prueba.Rnw", "Proyecciones.Rnw")
proy
auto.arima(data[,i])
auto.arima(data[,1])
str(auto.arima(data[,1]))
auto.arima(data[,1])$residuals
shapiro.test(auto.arima(data[,1])$residuals)
shapiro.test(auto.arima(data[,1])$residuals)
hist(auto.arima(data[,1])$residuals)
qqnorm(auto.arima(data[,1])$residuals)
qqline(auto.arima(data[,1])$residuals)
help(mfrow)
par(mfrow=c(2,1))
hist(auto.arima(data[,1])$residuals)
qqnorm(auto.arima(data[,1])$residuals)
qqline(auto.arima(data[,1])$residuals)
par(mfrow=c(1,2))
hist(auto.arima(data[,1])$residuals)
qqnorm(auto.arima(data[,1])$residuals)
qqline(auto.arima(data[,1])$residuals)
par(mfrow=c(1,2))
hist(auto.arima(data[,1])$residuals, main='Histograma Residuos')
qqnorm(auto.arima(data[,1])$residuals, main='Q-Q Plot')
qqline(auto.arima(data[,1])$residuals)
par(mfrow=c(1,2))
hist(auto.arima(data[,1])$residuals, main='Histograma Residuos', xlab='Residuos')
qqnorm(auto.arima(data[,1])$residuals, main='Q-Q Plot', xlab='Residuos')
qqline(auto.arima(data[,1])$residuals)
forecast(auto.arima(data[,1]), h=60)
forecast(auto.arima(data[,1]), h=60)[2,]
as.data.frame(forecast(auto.arima(data[,1]), h=60))
as.data.frame(forecast(auto.arima(data[,1]), h=60))[2,]
as.data.frame(forecast(auto.arima(data[,1]), h=60))[c(12,24,36,48,60),]
library(knitr)
ls("package:knitr")
kable(as.data.frame(forecast(auto.arima(data[,1]), h=60))[c(12,24,36,48,60),])
kable(as.data.frame(forecast(auto.arima(data[,1]), h=60))[c(12,24,36,48,60),], format = "latex")
help(kable)
kable(as.data.frame(forecast(auto.arima(data[,1]), h=60))[c(12,24,36,48,60),1], format = "latex")
layout(matrix(c(1,1,2,3),2,2, byrow = TRUE))
plot(data[,10], main="Serie original", ylab="Afiliados")
acf(data[,10], main="FAC", ci.col="red", ylab="ACF", 48)
pacf(data[,10], main="FACP", ci.col="red", ylab="PACF", 48)
1193.79(1+0.03)^15
1193.79*(1+0.03)^15
1500*12
1.035^3+1.035^2
1000*1.035+1000
2035/2.179943
layout(matrix(c(1,1,2,3),2,2, byrow = TRUE))
plot(data[,10], main="Serie original", ylab="Afiliados")
Acf(data[,10], main="FAC", ci.col="red", ylab="ACF", 48)
Pacf(data[,10], main="FACP", ci.col="red", ylab="PACF", 48)
layout(matrix(c(1,1,2,3),2,2, byrow = TRUE))
plot(data[,10], main="Serie original", ylab="Afiliados")
acf(data[,10], main="FAC", ci.col="red", ylab="ACF", 48)
pacf(data[,10], main="FACP", ci.col="red", ylab="PACF", 48)
layout(matrix(c(1,1,2,3),2,2, byrow = TRUE))
plot(diff(data[,10]), main="Serie original", ylab="Afiliados")
acf(diffdata[,10]), main="FAC", ci.col="red", ylab="ACF", 48)
pacf(diff(data[,10]), main="FACP", ci.col="red", ylab="PACF", 48)
layout(matrix(c(1,1,2,3),2,2, byrow = TRUE))
plot(diff(data[,10]), main="Serie original", ylab="Afiliados")
acf(diff(data[,10]), main="FAC", ci.col="red", ylab="ACF", 48)
pacf(diff(data[,10]), main="FACP", ci.col="red", ylab="PACF", 48)
layout(matrix(c(1,1,2,3),2,2, byrow = TRUE))
plot(data[,10], main="Serie original", ylab="Afiliados")
acf(data[,10], main="FAC", ci.col="red", ylab="ACF", 48)
pacf(data[,10], main="FACP", ci.col="red", ylab="PACF", 48)
layout(matrix(c(1,1,2,3),2,2, byrow = TRUE))
plot(diff(data[,10]), main="Serie original", ylab="Afiliados")
acf(diff(data[,10]), main="FAC", ci.col="red", ylab="ACF", 48)
pacf(diff(data[,10]), main="FACP", ci.col="red", ylab="PACF", 48)
layout(matrix(c(1,1,2,3),2,2, byrow = TRUE))
plot(diff(diff(data[,10]), 12), main="Serie original", ylab="Afiliados")
acf(diff(diff(data[,10]), 12), main="FAC", ci.col="red", ylab="ACF", 48)
pacf(diff(diff(data[,10]), 12), main="FACP", ci.col="red", ylab="PACF", 48)
auto.arima(data[,10])
library(tseries)
library(forecast)
auto.arima(data[,10])
mod <- Arima(data[,10], order=c(0,0,0), seasonal = list(order=c(0,0,0), period=12))
mod
mod$residuals
layout(matrix(c(1,1,2,3),2,2, byrow = TRUE))
plot(mod$residuals, main="Serie original", ylab="Afiliados")
acf(mod$residuals, main="FAC", ci.col="red", ylab="ACF", 48)
pacf(mod$residuals, main="FACP", ci.col="red", ylab="PACF", 48)
layout(matrix(c(1,1,2,3),2,2, byrow = TRUE))
plot(data[,10], main="Serie original", ylab="Afiliados")
acf(data[,10], main="FAC", ci.col="red", ylab="ACF", 48)
pacf(data[,10], main="FACP", ci.col="red", ylab="PACF", 48)
mod <- Arima(data[,10], order=c(0,1,0), seasonal = list(order=c(0,0,0), period=12))
layout(matrix(c(1,1,2,3),2,2, byrow = TRUE))
plot(mod$residuals, main="Serie original", ylab="Afiliados")
acf(mod$residuals, main="FAC", ci.col="red", ylab="ACF", 48)
pacf(mod$residuals, main="FACP", ci.col="red", ylab="PACF", 48)
mod <- Arima(data[,10], order=c(0,1,0), seasonal = list(order=c(0,1,0), period=12))
layout(matrix(c(1,1,2,3),2,2, byrow = TRUE))
plot(mod$residuals, main="Serie original", ylab="Afiliados")
acf(mod$residuals, main="FAC", ci.col="red", ylab="ACF", 48)
pacf(mod$residuals, main="FACP", ci.col="red", ylab="PACF", 48)
mod <- Arima(data[,10], order=c(0,1,0), seasonal = list(order=c(0,2,0), period=12))
layout(matrix(c(1,1,2,3),2,2, byrow = TRUE))
plot(mod$residuals, main="Serie original", ylab="Afiliados")
acf(mod$residuals, main="FAC", ci.col="red", ylab="ACF", 48)
pacf(mod$residuals, main="FACP", ci.col="red", ylab="PACF", 48)
mod$aic
mod <- Arima(data[,10], order=c(0,1,0), seasonal = list(order=c(0,1,0), period=12))
mod$aic
layout(matrix(c(1,1,2,3),2,2, byrow = TRUE))
plot(mod$residuals, main="Serie original", ylab="Afiliados")
acf(mod$residuals, main="FAC", ci.col="red", ylab="ACF", 48)
pacf(mod$residuals, main="FACP", ci.col="red", ylab="PACF", 48)
auto.arima(data[,10])$aic
mod <- Arima(data[,10], order=c(0,1,0), seasonal = list(order=c(0,1,1), period=12))
mod$aic
layout(matrix(c(1,1,2,3),2,2, byrow = TRUE))
plot(mod$residuals, main="Serie original", ylab="Afiliados")
acf(mod$residuals, main="FAC", ci.col="red", ylab="ACF", 48)
pacf(mod$residuals, main="FACP", ci.col="red", ylab="PACF", 48)
mod <- Arima(data[,10], order=c(0,1,1), seasonal = list(order=c(0,1,0), period=12))
mod$aic
layout(matrix(c(1,1,2,3),2,2, byrow = TRUE))
plot(mod$residuals, main="Serie original", ylab="Afiliados")
acf(mod$residuals, main="FAC", ci.col="red", ylab="ACF", 48)
pacf(mod$residuals, main="FACP", ci.col="red", ylab="PACF", 48)
mod <- Arima(data[,10], order=c(0,1,1), seasonal = list(order=c(0,1,1), period=12))
mod$aic
layout(matrix(c(1,1,2,3),2,2, byrow = TRUE))
plot(mod$residuals, main="Serie original", ylab="Afiliados")
acf(mod$residuals, main="FAC", ci.col="red", ylab="ACF", 48)
pacf(mod$residuals, main="FACP", ci.col="red", ylab="PACF", 48)
mod <- Arima(data[,10], order=c(1,1,1), seasonal = list(order=c(0,1,1), period=12))
mod$aic
layout(matrix(c(1,1,2,3),2,2, byrow = TRUE))
plot(mod$residuals, main="Serie original", ylab="Afiliados")
acf(mod$residuals, main="FAC", ci.col="red", ylab="ACF", 48)
pacf(mod$residuals, main="FACP", ci.col="red", ylab="PACF", 48)
auto.arima(data[,10])
mod <- Arima(data[,10], order=c(0,1,0), seasonal = list(order=c(0,0,0), period=12))
mod$aic
layout(matrix(c(1,1,2,3),2,2, byrow = TRUE))
plot(mod$residuals, main="Serie original", ylab="Afiliados")
acf(mod$residuals, main="FAC", ci.col="red", ylab="ACF", 48)
pacf(mod$residuals, main="FACP", ci.col="red", ylab="PACF", 48)
mod <- Arima(data[,10], order=c(0,1,0), seasonal = list(order=c(0,0,1), period=12))
mod$aic
layout(matrix(c(1,1,2,3),2,2, byrow = TRUE))
plot(mod$residuals, main="Serie original", ylab="Afiliados")
acf(mod$residuals, main="FAC", ci.col="red", ylab="ACF", 48)
pacf(mod$residuals, main="FACP", ci.col="red", ylab="PACF", 48)
mod <- Arima(data[,10], order=c(0,1,1), seasonal = list(order=c(0,0,1), period=12))
mod$aic
layout(matrix(c(1,1,2,3),2,2, byrow = TRUE))
plot(mod$residuals, main="Serie original", ylab="Afiliados")
acf(mod$residuals, main="FAC", ci.col="red", ylab="ACF", 48)
pacf(mod$residuals, main="FACP", ci.col="red", ylab="PACF", 48)
boxplot(data[,10]~cycle(data[,10]))
boxplot(data[,10]~cycle(data[,10]))
(2.0896+2.1090)/2
7747*20
install.packages('ISLR', dependencies = TRUE)
library(ISLR)
ls("package:ISLR")
Hitters
help(Hitters)
library(xtable)
xtable(data.frame(Dic2015=as.data.frame(proy)[12,1], Dic2016=as.data.frame(proy)[24,1], Dic2017=as.data.frame(proy)[36,1],
Dic2018=as.data.frame(proy)[48,1], Dic2019=as.data.frame(proy)[60,1]), format="latex")
}
25*12
40*12
22*6
21*5
132-65
240-105
polyroot(c(135,67,8))
4*polyroot(c(135,67,8))
8*polyroot(c(135,67,8))
40+27
67*8
8*135
27*40
48-27
-32+27
3.45*400
201*25
321*25
321*50
321/12
144*50
250+0.25*366
0.75*5000+0.25*366
file.create("Script03.R")
file.edit("Script03.R")
library(forecast)
ls("package:forecast")
uspop
plot(uspop)
fcast <- splinef(uspop,h=5)
fcast
plot(fcast)
data <- read_excel("Cotizantes.xlsx", sheet = 1)
library('readxl')
library('dplyr')
data <- read_excel("Cotizantes.xlsx", sheet = 1)
data
data <- data %>% select(-Periodo)
data
glimpse(data)
data <- ts(data, start = c(2005), frequency = 12)
data
data[,1]
splinef(data[,1])
splinef(data[,1], h=12)
splinef(data[,1], h=24)
plot(splinef(data[,1], h=24))
plot(splinef(data[,1], h=12))
plot(splinef(data[,1], h=12, method="mle"))
plot(splinef(data[,1], h=12, method="gvc"))
plot(splinef(data[,1], h=12, method="gcv"))
plot(splinef(data[,1], h=12, method="mle"))
ls("package:forecast")
help(stlf)
findfrequency(data[,1])
install.packages('flowfield', dependencies = TRUE)
plot(splinef(data[,1], h=12, method="mle"))
plot(splinef(data[,1], h=24, method="mle"))
splinef(data[,1], h=24, method="mle")
plot(splinef(data[,1], h=36, method="mle"))
splinef(data[,1], h=36, method="mle")
data
colanmes(data)
colnames(data)
plot(splinef(data[,19], h=36, method="mle"))
win.graph(width=4.875,height=2.5,pointsize=8)
data(airmiles)
plot(log(airmiles),ylab='Log(airmiles)',xlab='Year')
cds<- structure(c(2580L, 2263L, 3679L, 3461L, 3645L, 3716L, 3955L,
3362L, 2637L, 2524L, 2084L, 2031L, 2256L, 2401L, 3253L, 2881L,
2555L, 2585L, 3015L, 2608L, 3676L, 5763L, 4626L, 3848L, 4523L,
4186L, 4070L, 4000L, 3498L), .Dim = c(29L, 1L), .Dimnames = list(
NULL, "CD"), .Tsp = c(2012, 2014.33333333333, 12), class = "ts")
cds
help(arimax)
install.packages('TSA', dependencies = TRUE)
install.packages('tsoutlier', dependencies = TRUE)
devtools::install_github("cran/tsoutlier")
devtools::install_github("cran", "tsoutlier")
devtools::install_github("cran", "tsoutliers")
install.packages('tsoutliers', dependencies = TRUE)
install.packages('expsmooth', dependencies = TRUE)
install.packages('fma', dependencies = TRUE)
outlier.chicken <- tsoutliers::tso(chicken,types = c("AO","LS","TC"),maxit.iloop=10)
library(tsoutliers)
library(expsmooth)
library(fma)
outlier.chicken <- tsoutliers::tso(chicken,types = c("AO","LS","TC"),maxit.iloop=10)
tsoutliers
tso
chicken
tso(chicken, types = c("AO","LS","TC"), maxit.iloop=10)
outlier.chicken
plot(chicken)
tso(chicken)
help(tso)
class(chicken)
tso(chicken)
library('forecast')
library('readxl')
library('dplyr')
ls("package:forecast")
data <- read_excel("Cotizantes.xlsx", sheet = 1)
data <- data %>% select(-Periodo)
glimpse(data)
0.25*366
library(tsoutliers)
library(expsmooth)
library(fma)
ls("package:tsoutliers")
data[,1]
data <- ts(data, start = c(2005), frequency = 12)
data
data[,1]
class(data[,1])
tso(data[,1])
install.packages('tsoutliers')
install.packages("tsoutliers")
install.packages("tsoutliers", dependencies = TRUE)
library('forecast')
library('readxl')
library('dplyr')
ls("package:forecast")
data <- read_excel("Cotizantes.xlsx", sheet = 1)
data <- data %>% select(-Periodo)
glimpse(data)
data <- ts(data, start = c(2005), frequency = 12)
library(tsoutliers)
library(expsmooth)
library(fma)
tsoutliers::tso(data[,1], types = c("AO","LS","TC"), maxit.iloop=10)
chicken
tsoutliers::tso(chicken, types = c("AO","LS","TC"), maxit.iloop=10)
